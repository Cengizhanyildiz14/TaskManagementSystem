@using System.Security.Claims
@using TaskManager_WEB.Resources
@using Utility
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpAcc
@inject LanguageService ShareLocalizer
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

@{
    var userId = HttpAcc.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - TaskManager_WEB</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/TaskManager_WEB.styles.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.5.0/css/flag-icon.min.css" />
</head>
<body>
    <div id="loading-animation">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <header>
        <nav class="navbar navbar-expand-lg navbar-light bg-light shadow-sm">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="home" asp-action="home" style="margin-left: 20px;">
                    <img src="~/images/son.png" alt="Logo" style="height: 100px;" />
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav me-auto mb-2 mb-lg-0 align-items-center">
                        <li class="nav-item">
                            <a class="nav-link fs-4 fw-bold @(ViewContext.RouteData.Values["action"].ToString() == "home" ? "active" : "")"
                               asp-area="" asp-controller="home" asp-action="home">@ShareLocalizer.Getkey("Home")</a>
                        </li>
                        @if (HttpAcc.HttpContext.User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item">
                                <a class="nav-link fs-4 fw-bold @(ViewContext.RouteData.Values["action"].ToString() == "GetAllUsers" ? "active" : "")"
                                   asp-area="" asp-controller="user" asp-action="getallusers">
                                    @ShareLocalizer.Getkey("TaskTrackingList")
                                </a>
                            </li>
                        }
                    </ul>

                    <ul class="navbar-nav ms-auto align-items-center">
                        @if (HttpAcc.HttpContext.User.Identity.IsAuthenticated)
                        {
                            <div class="dropdown">
                                <a class="me-3 hidden-arrow notification-icon" href="#" id="navbarDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-bell text-dark"></i>
                                    <span class="badge rounded-pill badge-notification bg-danger notification-badge" style="border: none;" id="notificationCount">0</span>
                                </a>
                                <ul class="dropdown-menu mt-3" aria-labelledby="navbarDropdownMenuLink" id="notificationContent">
                                    <li><a class="dropdown-item no-notifications" href="#">@ShareLocalizer.Getkey("Notification")</a></li>
                                </ul>
                            </div>
                            <li class="nav-item">
                                <a class="nav-link fs-4 fw-bold @(ViewContext.RouteData.Values["action"].ToString() == "Profile" ? "active" : "")"
                                   asp-area="" asp-controller="user" asp-action="Profile" asp-route-id="@userId">
                                    @ShareLocalizer.Getkey("Profile")
                                </a>
                            </li>
                            <li class="nav-item">
                                <a id="logoutButton" class="nav-link fs-4 fw-bold" asp-area="" asp-controller="Auth" asp-action="LogOut">
                                    @ShareLocalizer.Getkey("Logout")
                                </a>
                            </li>
                            @if (HttpAcc.HttpContext.User.IK())
                            {
                                <li class="nav-item dropdown">
                                    <a class="nav-link dropdown-toggle fs-4 fw-bold notification-icon" href="#" id="ikDropdownMenu" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        @ShareLocalizer.Getkey("IK")
                                    </a>
                                    <ul class="dropdown-menu mt-3" aria-labelledby="ikDropdownMenu" id="ikDropdownContent">
                                        <li>
                                            <a class="dropdown-item notification-item" asp-controller="User" asp-action="UserList">
                                                @ShareLocalizer.Getkey("PersonnelList") <!-- Çalışan Listesi -->
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item notification-item" asp-controller="Department" asp-action="DepartmentCreate">
                                                @ShareLocalizer.Getkey("AddNewDepartment") <!-- Departman Oluştur -->
                                            </a>
                                        </li>
                                        <li>
                                            <a class="dropdown-item notification-item" asp-controller="User" asp-action="UserCreate">
                                                @ShareLocalizer.Getkey("AddPersonnel") <!-- Kullanıcı Ekle -->
                                            </a>
                                        </li>
                                    </ul>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link fs-4 fw-bold @(ViewContext.RouteData.Values["action"].ToString() == "Login" ? "active" : "")"
                                   asp-area="" asp-controller="Auth" asp-action="Login">
                                    @ShareLocalizer.Getkey("Login")
                                </a>
                            </li>
                        }

                        <li class="nav-item">
                            <a asp-controller="Home" asp-action="ChangeLang" asp-route-culture="en-US" class="nav-link">
                                <span class="flag-icon flag-icon-gb fs-4"></span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a asp-controller="Home" asp-action="ChangeLang" asp-route-culture="tr-TR" class="nav-link">
                                <span class="flag-icon flag-icon-tr fs-4"></span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="container-fluid fade-in">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container-fluid text-center">
            <iframe src="https://www.google.com/maps/embed?pb=!1m14!1m8!1m3!1d8655.2412875667!2d32.7886912602928!3d39.91700423309819!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x14d3494cbba972b9%3A0x3c095cf122b3920!2sTar%C4%B1m%20Kredi%20Teknoloji%20A.%C5%9E.!5e0!3m2!1str!2str!4v1725452850454!5m2!1str!2str"
                    width="100%" height="150" style="border:0;" allowfullscreen="" loading="lazy"
                    referrerpolicy="no-referrer-when-downgrade"></iframe>
        </div>
        <div class="container-fluid text-center fs-5">
            <p>&copy; 2024 - TaskManager_WEB - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a></p>
        </div>
    </footer>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            $('#logoutButton').on('click', function (e) {
                e.preventDefault();
                Swal.fire({
                    title: '@ShareLocalizer.Getkey("LogoutConfirmationTitle")',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: '@ShareLocalizer.Getkey("LogoutConfirmationConfirmText")',
                    cancelButtonText: '@ShareLocalizer.Getkey("LogoutConfirmationCancelText")'
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = $(this).attr('href');
                    }
                });
            });

            var userId = '@userId';
            var url = '/UsersTaskJson/' + userId;
            $.get(url, function (tasks) {
                var pendingTasks = tasks.filter(function (task) {
                    return task.status === 0;
                });

                if (pendingTasks.length > 0) {
                    $('#notificationCount').text(pendingTasks.length);
                    $('#notificationContent').empty();

                    var monthNames = {
                        1: "@ShareLocalizer.Getkey("January")",
                        2: "@ShareLocalizer.Getkey("February")",
                        3: "@ShareLocalizer.Getkey("March")",
                        4: "@ShareLocalizer.Getkey("April")",
                        5: "@ShareLocalizer.Getkey("May")",
                        6: "@ShareLocalizer.Getkey("June")",
                        7: "@ShareLocalizer.Getkey("July")",
                        8: "@ShareLocalizer.Getkey("August")",
                        9: "@ShareLocalizer.Getkey("September")",
                        10: "@ShareLocalizer.Getkey("October")",
                        11: "@ShareLocalizer.Getkey("November")",
                        12: "@ShareLocalizer.Getkey("December")"
                    };

                    pendingTasks.forEach(function (task) {
                        var taskName = task.taskName || "No Task Name";
                        var createrFullName = task.createrUserName + " " + task.createrUserLastName;

                        var assignmentDate = new Date(task.assignmentDate);
                        var day = assignmentDate.getDate();
                        var month = monthNames[assignmentDate.getMonth() + 1]; 
                        var year = assignmentDate.getFullYear();
                        var hours = assignmentDate.getHours().toString().padStart(2, '0');
                        var minutes = assignmentDate.getMinutes().toString().padStart(2, '0');
                        var formattedDate = day + " " + month + " " + year + ", " + hours + ":" + minutes;

                        var listItem = $('<li>').append(
                            $('<a>').addClass('dropdown-item notification-item')
                                .html(
                                    "<span class='notification-text'>" +
                                    "@ShareLocalizer.Getkey("AssignedTaskNotificationStart") " +
                                    createrFullName +
                                    "@ShareLocalizer.Getkey("AssignedTaskNotificationEnd")" +
                                    "</span>" +
                                    "<span class='assign-date'>" + formattedDate + "</span>"
                                )
                                .click(function () {
                                    window.location.href = '/UsersTask/' + userId;
                                })
                        );
                        $('#notificationContent').append(listItem);
                    });

                } else {
                    $('#notificationCount').text(0);
                    $('#notificationContent').html('<li><a class="dropdown-item no-notifications" href="#">@ShareLocalizer.Getkey("Notification")</a></li>');
                }
            });

            var isHovered = false;

            $('#navbarDropdownMenuLink').hover(function () {
                $(this).dropdown('show');
                isHovered = true;
            }, function () {
                setTimeout(function () {
                    if (!isHovered) {
                        $('#navbarDropdownMenuLink').dropdown('hide');
                    }
                }, 100);
            });

            $('#notificationContent').hover(function () {
                isHovered = true;
            }, function () {
                isHovered = false;
                setTimeout(function () {
                    if (!isHovered) {
                        $('#navbarDropdownMenuLink').dropdown('hide');
                    }
                }, 100);
            });

            $(window).on('load', function () {
                clearTimeout(loadingTimeout);
                $('#loading-animation').fadeOut('slow');
            });

            $('#announcementModal').on('show.bs.modal', function () {
                $('.fade-in').removeClass('fade-in');
                $('#loading-animation').hide();
            });

            $('#announcementModal').on('hidden.bs.modal', function () {
                $('.fade-in').addClass('fade-in');
                $('#loading-animation').fadeOut('slow');
            });

            $('form').on('submit', function () {
                $('#loading-animation').fadeIn('slow');
            });

            var loadingTimeout = setTimeout(function () {
                $('#loading-animation').fadeIn('slow');
            }, 500);
        });
    </script>


    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>

<style>
    html, body {
        height: 100%;
        margin: 0;
    }

    body {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        min-height: 100vh;
    }

    main {
        flex-grow: 1;
    }

    footer {
        background-color: #f8f9fa !important;
        padding: 20px !important;
        text-align: center;
        width: 100% !important;
        position: relative !important;
        bottom: 0 !important;
    }

    #loading-animation {
        position: fixed;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        background-color: rgba(255, 255, 255, 0.8);
        z-index: 9999;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
        border: 0.25em solid currentColor;
        border-right-color: transparent;
        border-radius: 50%;
        animation: spinner-border 0.75s linear infinite;
    }

    .notification-icon {
        position: relative;
        display: inline-block;
        font-size: 24px;
        cursor: pointer;
        transition: color 0.3s ease;
        color: #333;
        border: none;
        outline: none;
        background-color: transparent;
        box-shadow: none;
    }

    .notification-badge {
        position: absolute;
        top: -10px;
        right: -10px;
        padding: 5px 10px;
        border-radius: 50%;
        background: #dc3545;
        color: white;
        font-size: 12px;
        font-weight: bold;
        z-index: 1;
    }

    #notificationContent {
        min-width: 400px;
        transform: translateX(-50%);
        background-color: #fff;
        border-radius: 10px;
        padding: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .notification-item {
        padding: 15px;
        padding-bottom: 30px;
        margin-bottom: 10px;
        border-radius: 8px;
        background-color: #f8f9fa;
        transition: background-color 0.3s ease, box-shadow 0.3s ease;
        position: relative;
        color: #333;
        font-size: 1rem;
        min-height: 60px;
        cursor: pointer;
        user-select: none;
    }

        .notification-item:hover {
            background-color: #e2e6ea;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

    .notification-text {
        font-weight: 500;
        margin: 0;
        padding-right: 80px;
    }

    .assign-date {
        position: absolute;
        bottom: 10px;
        margin-top: 10px;
        right: 15px;
        font-size: 0.85rem;
        color: #6c757d;
        white-space: nowrap;
    }

    .no-notifications {
        text-align: center;
        padding: 10px;
        color: #888;
        font-style: italic;
    }

    .fade-in {
        opacity: 0;
        animation: fadeInEffect 0.5s ease-in forwards;
    }

    @@keyframes fadeInEffect {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    .nav-link.active {
        position: relative;
        font-weight: bold;
    }

        .nav-link.active::after {
            content: "";
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background-color: orange;
        }

    #ikDropdownContent {
        min-width: 400px;
        transform: translateX(-50%);
        background-color: #fff;
        border-radius: 10px;
        top: 38px;
        left: -50px;
        padding: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

        #ikDropdownContent .dropdown-item {
            text-align: left;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            background-color: #f8f9fa;
            transition: background-color 0.3s ease;
            font-size: 16px;
            color: #333;
        }

    #ikDropdownMenu:hover #ikDropdownContent {
        display: block;
    }
</style>
