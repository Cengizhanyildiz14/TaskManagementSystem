@using Data
@model List<UserViewModel>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpAcc

<div class="container-fluid mt-5" style="padding-left: 0; padding-right: 0;">
    <div class="row">
        <!-- Profil Kartı -->
        <div class="col-lg-2 d-flex justify-content-start mb-4" style="padding-left: 0;">
            <div class="card shadow-sm w-100">
                <div class="card-header bg-secondary text-white text-center">
                    <h5 class="mb-0">Personel Profili</h5>
                </div>
                <div class="card-body text-center">
                    <img src="@Url.Content("~/images/pp.png")" class="rounded-circle img-fluid mb-3" alt="Profile Image" style="width: 120px; height: 120px; object-fit: cover;">
                    <h5 class="card-title">@ViewBag.FullName</h5>
                    <p class="card-text">
                        <strong>Email:</strong> <a href="mailto:@ViewBag.Email">@ViewBag.Email</a><br />
                        <strong>Departman: <br /></strong> @ViewBag.DepartmentName
                    </p>
                </div>
            </div>
        </div>

        <!-- Görev Takip Listesi -->
        <div class="col-lg-10 d-flex justify-content-end" style="padding-right: 0;">
            <div class="w-100">
                <h2 class="mb-4">Görev Takip Listesi</h2>

                <div class="d-flex justify-content-end mb-2">
                    <a asp-controller="Task" asp-action="Create" class="btn btn-secondary rounded-pill me-2">+ Yeni Görev Ekle</a>
                    @if (HttpAcc.HttpContext.User.IK())
                    {
                        <a asp-controller="Home" asp-action="DepartmentCreate" class="btn btn-secondary rounded-pill me-2">+ Departman Ekle</a>
                        <a asp-controller="Home" asp-action="UserCreate" class="btn btn-secondary rounded-pill me-2">+ Personel Ekle</a>
                        <a asp-controller="Home" asp-action="UserList" class="btn btn-secondary rounded-pill">+ Personel Listesi</a>
                    }
                </div>

                <div class="table-responsive">
                    <table class="table table-striped" id="usersTable">
                        <thead class="thead-light">
                            <tr>
                                <th>
                                    <input type="text" id="searchAssignedUserName" class="form-control rounded-pill" placeholder="Atanan Ad-Soyad Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchEmail" class="form-control rounded-pill" placeholder="Mail Adresi Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchDepartment" class="form-control rounded-pill" placeholder="Departman Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchTaskName" class="form-control rounded-pill" placeholder="İş ve Görev Tanımı Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchCreatorUserName" class="form-control rounded-pill" placeholder="Atama Yapan Kişi Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchStatus" class="form-control rounded-pill" placeholder="Durum Ara">
                                </th>
                                <th>
                                    <button type="button" class="btn btn-secondary rounded-pill" onclick="clearFilters()">Temizle</button>
                                </th>
                            </tr>
                            <tr>
                                <th>Atanan Ad-Soyad</th>
                                <th>Mail Adresi</th>
                                <th>Departman</th>
                                <th>İş ve Görev Tanımı</th>
                                <th>Atama Yapan Kişi</th>
                                <th>Durum</th>
                                <th>Detay</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var userViewModel in Model)
                            {
                                foreach (var task in userViewModel.AssignedTasks)
                                {
                                    <tr>
                                        <td class="assigned-user">@task.AsaignedUserName</td>
                                        <td class="email">@task.AsaignedUserEmail</td>
                                        <td class="department">@task.Department.DepartmentName</td>
                                        <td class="task-name">@task.TaskName</td>
                                        <td class="creator-user">@task.CreaterUser</td>
                                        <td class="status">@task.StatusDescription</td>
                                        <td>
                                            <a asp-action="TaskDetails" asp-controller="Task" asp-route-id="@task.Id" class="btn btn-secondary btn-sm">Detay</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            function filterTable() {
                var searchAssignedUserName = $("#searchAssignedUserName").val().toLowerCase();
                var searchEmail = $("#searchEmail").val().toLowerCase();
                var searchDepartment = $("#searchDepartment").val().toLowerCase();
                var searchTaskName = $("#searchTaskName").val().toLowerCase();
                var searchCreatorUserName = $("#searchCreatorUserName").val().toLowerCase();
                var searchStatus = $("#searchStatus").val().toLowerCase();

                $("#usersTable tbody tr").filter(function () {
                    var assignedUserMatch = $(this).find(".assigned-user").text().toLowerCase().indexOf(searchAssignedUserName) > -1;
                    var emailMatch = $(this).find(".email").text().toLowerCase().indexOf(searchEmail) > -1;
                    var departmentMatch = $(this).find(".department").text().toLowerCase().indexOf(searchDepartment) > -1;
                    var taskNameMatch = $(this).find(".task-name").text().toLowerCase().indexOf(searchTaskName) > -1;
                    var creatorUserMatch = $(this).find(".creator-user").text().toLowerCase().indexOf(searchCreatorUserName) > -1;
                    var statusMatch = $(this).find(".status").text().toLowerCase().indexOf(searchStatus) > -1;

                    $(this).toggle(assignedUserMatch && emailMatch && departmentMatch && taskNameMatch && creatorUserMatch && statusMatch);
                });
            }

            $("#searchAssignedUserName, #searchEmail, #searchDepartment, #searchTaskName, #searchCreatorUserName, #searchStatus").on("keyup", filterTable);

            function clearFilters() {
                $("#searchAssignedUserName, #searchEmail, #searchDepartment, #searchTaskName, #searchCreatorUserName, #searchStatus").val('');
                $("#usersTable tbody tr").show();
            }
        });
    </script>
}
