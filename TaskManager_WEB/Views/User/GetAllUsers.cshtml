@using Utility
@model List<UserViewModel>
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpAcc
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

<div class="container-fluid mt-5 px-5">
    <div class="row gx-3">
        <!-- Profil Kartı Container -->
        <div class="col-2" style="padding-left: 0; margin-top: 180px;">
            <!-- Added margin-top here -->
            <div class="card shadow-sm w-100">
                <div class="card-header bg-secondary text-white text-center">
                    <h5 class="mb-0">Personel Profili</h5>
                </div>
                <div class="card-body text-center">
                    @{
                        var profileImage = HttpAcc.HttpContext.User.IsFemale()
                        ? Url.Content("~/images/femaleicon.png")
                        : Url.Content("~/images/pp.png");
                    }
                    <img src="@profileImage" class="rounded-circle img-fluid mb-3" alt="Profile Image" style="width: 120px; height: 120px; object-fit: cover;">
                    <h5 class="card-title">@ViewBag.FullName</h5>
                    <p class="card-text">
                        <strong>Email:</strong><br /> <a href="mailto:@ViewBag.Email">@ViewBag.Email</a><br />
                        <strong>Departman: <br /></strong> @ViewBag.DepartmentName <br />
                        <a asp-controller="user" asp-action="UsersTask" asp-route-id="@ViewBag.Id" class="btn btn-secondary rounded-pill mt-3">Görevlerim</a>
                    </p>
                </div>
            </div>
        </div>
    
        <!-- Görev Takip Listesi Container -->
        <div class="col-10" style="padding-right: 0;">
            <div class="container-fluid p-0">
                <h2 class="mb-4">Görev Takip Listesi</h2>

                <div class="d-flex justify-content-end mb-3">
                    <a asp-controller="Task" asp-action="Create" class="btn btn-secondary rounded-pill me-2">+ Yeni Görev Ekle</a>
                    @if (HttpAcc.HttpContext.User.IK())
                    {
                        <a asp-controller="Department" asp-action="DepartmentCreate" class="btn btn-secondary rounded-pill me-2">+ Departman Ekle</a>
                        <a asp-controller="user" asp-action="UserCreate" class="btn btn-secondary rounded-pill me-2">+ Personel Ekle</a>
                        <a asp-controller="user" asp-action="UserList" class="btn btn-secondary rounded-pill">+ Personel Listesi</a>
                    }
                </div>

                <div class="alert alert-info d-flex align-items-center rounded-pill mb-2" role="alert">
                    <div>
                        <i class="fas fa-check-circle text-success me-2"></i> Tamamlandı
                    </div>
                    <div class="ms-4">
                        <i class="fas fa-times-circle text-danger me-2"></i> Reddedildi
                    </div>
                    <div class="ms-4">
                        <i class="fas fa-clock text-warning me-2"></i> Beklemede
                    </div>
                    <div class="ms-4">
                        <i class="fas fa-exclamation-circle me-2" style="color:#FF5F15"></i> Süre Doldu
                    </div>
                    <div class="ms-4">
                        <i class="fas fa-minus-circle text-dark me-2"></i> Yok
                    </div>
                </div>

                <div class="table-responsive">
                    <table class="table table-striped table-bordered fs-6 lh-lg" id="usersTable">
                        <thead class="thead-light">
                            <tr>
                                <th>
                                    <input type="text" id="searchAssignedUserName" class="form-control rounded-pill" placeholder="Atanan Ad-Soyad Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchEmail" class="form-control rounded-pill" placeholder="Mail Adresi Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchDepartment" class="form-control rounded-pill" placeholder="Departman Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchTaskName" class="form-control rounded-pill" placeholder="İş ve Görev Tanımı Ara">
                                </th>
                                <th>
                                    <input type="text" id="searchCreatorUserName" class="form-control rounded-pill" placeholder="Atama Yapan Kişi Ara">
                                </th>
                                <th class="text-center">Durum</th>
                                <th>Detay</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var userViewModel in Model)
                            {
                                if (userViewModel.AssignedTasks.Any())
                                {
                                    foreach (var task in userViewModel.AssignedTasks)
                                    {
                                        <tr>
                                            <td class="assigned-user text-center align-middle">@task.AsaignedUserName @task.AsaignedUserLastName</td>
                                            <td class="email text-center align-middle">@task.AsaignedUserEmail</td>
                                            <td class="department text-center align-middle">@task.Department.DepartmentName</td>
                                            <td class="task-name text-center align-middle">@task.TaskName</td>
                                            <td class="creator-user text-center align-middle">@task.CreaterUserName @task.CreaterUserLastName</td>
                                            <td class="status text-center align-middle">
                                                @if (task.StatusDescription == "Tamamlandı")
                                                {
                                                    <i class="fas fa-check-circle text-success"></i>
                                                }
                                                else if (task.StatusDescription == "Reddedildi")
                                                {
                                                    <i class="fas fa-times-circle text-danger"></i>
                                                }
                                                else if (task.StatusDescription == "SüreDoldu")
                                                {
                                                    <i class="fas fa-exclamation-circle" style="color:#FF5F15"></i>
                                                }
                                                else if (task.StatusDescription == "Beklemede")
                                                {
                                                    <i class="fas fa-clock text-warning"></i>
                                                }
                                            </td>
                                            <td class="text-center align-middle">
                                                <a asp-action="TaskDetails" asp-controller="Task" asp-route-id="@task.Id" class="btn btn-secondary btn-sm">Detay</a>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td class="assigned-user text-center align-middle">@userViewModel.User.Name @userViewModel.User.LastName</td>
                                        <td class="email text-center align-middle">@userViewModel.User.Email</td>
                                        <td class="department text-center align-middle">@userViewModel.User.Department.DepartmentName</td>
                                        <td class="task-name text-center align-middle">
                                            <i class="fas fa-minus-circle text-dark"></i>
                                        </td>
                                        <td class="creator-user text-center align-middle">
                                            <i class="fas fa-minus-circle text-dark"></i>
                                        </td>
                                        <td class="status text-center align-middle">
                                            <i class="fas fa-minus-circle text-dark"></i>
                                        </td>
                                        <td class="text-center align-middle">
                                            <i class="fas fa-minus-circle text-dark"></i>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // Türkçe diline özel toLowerCase fonksiyonu
            function turkishToLower(str) {
                var letters = { "İ": "i", "I": "ı", "Ş": "ş", "Ğ": "ğ", "Ü": "ü", "Ö": "ö", "Ç": "ç" };
                str = str.replace(/(([İIŞĞÜÇÖ]))/g, function (letter) { return letters[letter]; });
                return str.toLowerCase();
            }

            function filterTable() {
                var searchAssignedUserName = turkishToLower($("#searchAssignedUserName").val());
                var searchEmail = turkishToLower($("#searchEmail").val());
                var searchDepartment = turkishToLower($("#searchDepartment").val());
                var searchTaskName = turkishToLower($("#searchTaskName").val());
                var searchCreatorUserName = turkishToLower($("#searchCreatorUserName").val());

                $("#usersTable tbody tr").each(function () {
                    var assignedUserMatch = turkishToLower($(this).find(".assigned-user").text()).includes(searchAssignedUserName);
                    var emailMatch = turkishToLower($(this).find(".email").text()).includes(searchEmail);
                    var departmentMatch = turkishToLower($(this).find(".department").text()).includes(searchDepartment);
                    var taskNameMatch = turkishToLower($(this).find(".task-name").text()).includes(searchTaskName);
                    var creatorUserMatch = turkishToLower($(this).find(".creator-user").text()).includes(searchCreatorUserName);

                    if (assignedUserMatch && emailMatch && departmentMatch && taskNameMatch && creatorUserMatch) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            }

            function clearFilters() {
                $("#searchAssignedUserName, #searchEmail, #searchDepartment, #searchTaskName, #searchCreatorUserName").val('');
                $("#usersTable tbody tr").show();
            }

            $("#clearFiltersButton").click(function () {
                clearFilters();
            });

            $("#searchAssignedUserName, #searchEmail, #searchDepartment, #searchTaskName, #searchCreatorUserName").on("keyup", filterTable);
        });
    </script>
}


<style>
    i.fas {
        font-size: 1.5rem;
    }
</style>


  
